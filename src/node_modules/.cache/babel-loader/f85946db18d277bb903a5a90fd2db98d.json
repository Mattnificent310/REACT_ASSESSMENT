{"ast":null,"code":"var _jsxFileName = \"/home/ds/workspace/REACT_ASSESSMENT/src/FullCalendar.js\";\nimport React, { Component } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { EventService } from '../service/EventService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FullCalendarDemo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: []\n    };\n    this.eventService = new EventService();\n  }\n\n  componentDidMount() {\n    this.eventService.getEvents().then(data => this.setState({\n      events: data\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          events: this.state.events,\n          initialDate: \"2021-11-01\",\n          initialView: \"dayGridMonth\",\n          plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n          headerToolbar: {\n            left: 'prev,next today',\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n          },\n          editable: true,\n          selectable: true,\n          selectMirror: true,\n          dayMaxEvents: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ds/workspace/REACT_ASSESSMENT/src/FullCalendar.js"],"names":["React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","EventService","FullCalendarDemo","constructor","props","state","events","eventService","componentDidMount","getEvents","then","data","setState","render","left","center","right"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAASC,YAAT,QAA6B,yBAA7B;;AAEA,OAAO,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AAE5CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAIA,SAAKC,YAAL,GAAoB,IAAIN,YAAJ,EAApB;AACH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,YAAL,CAAkBE,SAAlB,GAA8BC,IAA9B,CAAmCC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACN,MAAAA,MAAM,EAAEK;AAAT,KAAd,CAA3C;AACH;;AAEDE,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,MAAM,EAAE,KAAKR,KAAL,CAAWC,MAAjC;AAAyC,UAAA,WAAW,EAAC,YAArD;AAAkE,UAAA,WAAW,EAAC,cAA9E;AAA6F,UAAA,OAAO,EAAE,CAACR,aAAD,EAAgBC,cAAhB,EAAgCC,iBAAhC,CAAtG;AACI,UAAA,aAAa,EAAE;AAAEc,YAAAA,IAAI,EAAE,iBAAR;AAA2BC,YAAAA,MAAM,EAAE,OAAnC;AAA4CC,YAAAA,KAAK,EAAE;AAAnD,WADnB;AACiH,UAAA,QAAQ,MADzH;AAC0H,UAAA,UAAU,MADpI;AACqI,UAAA,YAAY,MADjJ;AACkJ,UAAA,YAAY;AAD9J;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA1B2C","sourcesContent":["import React, { Component } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { EventService } from '../service/EventService';\n\nexport class FullCalendarDemo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            events: []\n        };\n\n        this.eventService = new EventService();\n    }\n\n    componentDidMount() {\n        this.eventService.getEvents().then(data => this.setState({events: data}));\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div className=\"card\">\n                    <FullCalendar events={this.state.events} initialDate=\"2021-11-01\" initialView='dayGridMonth' plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                        headerToolbar={{ left: 'prev,next today', center: 'title', right: 'dayGridMonth,timeGridWeek,timeGridDay' }} editable selectable selectMirror dayMaxEvents />\n                </div>\n            </div>\n        );\n    }\n}\n                 "]},"metadata":{},"sourceType":"module"}